<?xml version="1.0" encoding="UTF-8" ?>
<odoo>
    <data>
        <record id="cron_autogenerate_records" model="ir.cron">
            <field name="name">Autogenerate Score Records</field>
            <field name="model_id" ref="payroll_kpi.model_employee_score"/>
            <field name="user_id" ref="base.user_root"/>
            <field name="interval_number">1</field>
            <field name="interval_type">months</field>
            <field name="numbercall">-1</field>
            <field name="active" eval="True"/>
            <field name="state">code</field>
            <field name="code">
    model.autogenerate_records()
            </field>
        </record>

        <record id="automate_state_expired" model="base.automation">
            <field name="name">KPI Scores Expired in 10 Days</field>
            <field name="model_id" ref="payroll_kpi.model_employee_score"/>
            <field name="active" eval="True"/>
            <field name="trigger">on_time</field>
            <field name="filter_domain">[('state', '=', 'to_rate'), ('active', '=', True)]</field>
            <field name="trg_date_id" ref="payroll_kpi.field_employee_score__month"/>
            <field name="trg_date_range">10</field>
            <field name="trg_date_range_type">day</field>
            <field name="state">code</field>
            <field name="code">
    model.action_state_expired()
            </field>
        </record>

        <record id="automate_manager_reminder" model="base.automation">
            <field name="name">KPI Scores Expires in 5 days</field>
            <field name="model_id" ref="payroll_kpi.model_employee_score"/>
            <field name="active" eval="True"/>
            <field name="trigger">on_time</field>
            <field name="filter_domain">[('state', '=', 'to_rate'),('active', '=', True)]</field>
            <field name="trg_date_id" ref="payroll_kpi.field_employee_score__month"/>
            <field name="trg_date_range">5</field>
            <field name="trg_date_range_type">day</field>
            <field name="state">mail_post</field>
            <field name="template_id" ref="payroll_kpi.send_second_score_reminder_template"/>
        </record>

        <record id="automate_manager_reminder_3_days" model="base.automation">
            <field name="name">KPI Scores Expires in 3 days</field>
            <field name="model_id" ref="payroll_kpi.model_employee_score"/>
            <field name="active" eval="True"/>
            <field name="trigger">on_time</field>
            <field name="filter_domain">[('state', '=', 'to_rate'),('active', '=', True)]</field>
            <field name="trg_date_id" ref="payroll_kpi.field_employee_score__month"/>
            <field name="trg_date_range">3</field>
            <field name="trg_date_range_type">day</field>
            <field name="state">mail_post</field>
            <field name="template_id" ref="payroll_kpi.send_score_reminder_template"/>
        </record>

        <record id="automate_escalation_reminder" model="base.automation">
            <field name="name">KPI Scores Expires in 1 day</field>
            <field name="model_id" ref="payroll_kpi.model_employee_score"/>
            <field name="active" eval="True"/>
            <field name="trigger">on_time</field>
            <field name="filter_domain">[('state', '=', 'to_rate'), ('active', '=', True)]</field>
            <field name="trg_date_id" ref="payroll_kpi.field_employee_score__month"/>
            <field name="trg_date_range">9</field>
            <field name="trg_date_range_type">day</field>
            <field name="state">mail_post</field>
            <field name="template_id" ref="payroll_kpi.send_score_escalation_template"/>
        </record>

        <record id="automate_kpi_scores" model="base.automation">
            <field name="name">KPI Scores Send Email</field>
            <field name="model_id" ref="payroll_kpi.model_employee_kpi"/>
            <field name="active" eval="True"/>
            <field name="trigger">on_write</field>
            <field name="trigger_field_ids" eval="[(6, 0, [ref('payroll_kpi.field_employee_kpi__state')])]"/>           
            <field name="filter_domain">[('state', '=', 'rated')]</field>
             <field name="state">code</field>
            <field name="code">
                <![CDATA[
# Get the current KPI record
kpi_record = record

# Fetch all KPI records related to the employee
kpi_lines = env['payroll.kpi'].search([('employee_kpi_id', '=', kpi_record.id)])

# Send email using the template with context
template = env.ref('payroll_kpi.kpi_report_template')
template.with_context(employee_kpi_ids=kpi_lines).send_mail(kpi_record.id, force_send=True)
                ]]>
            </field>
        </record>


        <odoo>
    <data noupdate="1">
        <!-- Scheduled Action to Send KPI Report on the 12th of Every Month -->
        <record id="ir_cron_send_kpi_report" model="ir.cron">
            <field name="name">Send KPI Report to HR</field>
            <field name="model_id" ref="model_payroll_kpi"/>
            <field name="state">code</field>
            <field name="code">model.generate_and_send_kpi_report()</field>
            <field name="interval_number">1</field>
            <field name="interval_type">months</field>
            <field name="numbercall">-1</field> <!-- -1 means it will run indefinitely -->
            <field name="nextcall" eval="(DateTime.now() + relativedelta(day=12, hour=0, minute=0, second=0)).strftime('%Y-%m-%d %H:%M:%S')" />
            <field name="doall" eval="False"/>
        </record>
    </data>
</odoo>
    </data>
</odoo>
